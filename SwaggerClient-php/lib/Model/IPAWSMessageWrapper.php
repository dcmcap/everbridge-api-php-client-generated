<?php
/**
 * IPAWSMessageWrapper
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Rest Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.x
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.21
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * IPAWSMessageWrapper Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class IPAWSMessageWrapper implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'IPAWSMessageWrapper';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'account_id' => 'int',
        'affected_areas' => '\Swagger\Client\Model\GeoShapeWrapper[]',
        'body' => 'string',
        'cap_file_length' => 'int',
        'cap_file_resource_id' => 'string',
        'cap_send_result' => 'string',
        'cap_sent' => 'bool',
        'category' => 'string',
        'certainty' => 'string',
        'code' => 'string',
        'created_date' => '\DateTime',
        'created_id' => 'int',
        'created_name' => 'string',
        'created_proxy_name' => 'string',
        'event' => 'string',
        'event_code' => 'string',
        'expired_hours' => 'int',
        'fields' => '\Swagger\Client\Model\IpawsMessageField[]',
        'file_attachments' => '\Swagger\Client\Model\FileAttachmentWrapper[]',
        'geo_codes' => 'string[]',
        'handling' => 'string',
        'id' => 'int',
        'identifier' => 'int',
        'instruction' => 'string',
        'ipaws_message' => 'string',
        'ipaws_message_en360' => 'string',
        'ipaws_message_es360' => 'string',
        'ipaws_message_es90' => 'string',
        'keystore_password' => 'string',
        'language' => 'string',
        'last_modified_date' => '\DateTime',
        'last_modified_id' => 'int',
        'last_modified_name' => 'string',
        'last_modified_proxy_name' => 'string',
        'message_status' => 'string',
        'organization_id' => 'int',
        'private_key' => 'string',
        'pub_date' => '\DateTime',
        'resource_bundle_id' => 'int',
        'scope' => 'string',
        'send_result' => 'string',
        'sender' => 'string',
        'sender_name' => 'string',
        'sender_time_zone_id' => 'string',
        'sent' => 'bool',
        'severity' => 'string',
        'status' => 'string',
        'title' => 'string',
        'training_mode' => 'bool',
        'type' => 'string',
        'urgency' => 'string',
        'use_cap_rss' => 'bool',
        'voice' => '\Swagger\Client\Model\FileAttachmentWrapper',
        'web' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'account_id' => 'int64',
        'affected_areas' => null,
        'body' => null,
        'cap_file_length' => 'int32',
        'cap_file_resource_id' => null,
        'cap_send_result' => null,
        'cap_sent' => null,
        'category' => null,
        'certainty' => null,
        'code' => null,
        'created_date' => 'date-time',
        'created_id' => 'int64',
        'created_name' => null,
        'created_proxy_name' => null,
        'event' => null,
        'event_code' => null,
        'expired_hours' => 'int32',
        'fields' => null,
        'file_attachments' => null,
        'geo_codes' => null,
        'handling' => null,
        'id' => 'int64',
        'identifier' => 'int64',
        'instruction' => null,
        'ipaws_message' => null,
        'ipaws_message_en360' => null,
        'ipaws_message_es360' => null,
        'ipaws_message_es90' => null,
        'keystore_password' => null,
        'language' => null,
        'last_modified_date' => 'date-time',
        'last_modified_id' => 'int64',
        'last_modified_name' => null,
        'last_modified_proxy_name' => null,
        'message_status' => null,
        'organization_id' => 'int64',
        'private_key' => null,
        'pub_date' => 'date-time',
        'resource_bundle_id' => 'int64',
        'scope' => null,
        'send_result' => null,
        'sender' => null,
        'sender_name' => null,
        'sender_time_zone_id' => null,
        'sent' => null,
        'severity' => null,
        'status' => null,
        'title' => null,
        'training_mode' => null,
        'type' => null,
        'urgency' => null,
        'use_cap_rss' => null,
        'voice' => null,
        'web' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'account_id' => 'accountId',
        'affected_areas' => 'affectedAreas',
        'body' => 'body',
        'cap_file_length' => 'capFileLength',
        'cap_file_resource_id' => 'capFileResourceId',
        'cap_send_result' => 'capSendResult',
        'cap_sent' => 'capSent',
        'category' => 'category',
        'certainty' => 'certainty',
        'code' => 'code',
        'created_date' => 'createdDate',
        'created_id' => 'createdId',
        'created_name' => 'createdName',
        'created_proxy_name' => 'createdProxyName',
        'event' => 'event',
        'event_code' => 'eventCode',
        'expired_hours' => 'expiredHours',
        'fields' => 'fields',
        'file_attachments' => 'fileAttachments',
        'geo_codes' => 'geoCodes',
        'handling' => 'handling',
        'id' => 'id',
        'identifier' => 'identifier',
        'instruction' => 'instruction',
        'ipaws_message' => 'ipawsMessage',
        'ipaws_message_en360' => 'ipawsMessageEn360',
        'ipaws_message_es360' => 'ipawsMessageEs360',
        'ipaws_message_es90' => 'ipawsMessageEs90',
        'keystore_password' => 'keystorePassword',
        'language' => 'language',
        'last_modified_date' => 'lastModifiedDate',
        'last_modified_id' => 'lastModifiedId',
        'last_modified_name' => 'lastModifiedName',
        'last_modified_proxy_name' => 'lastModifiedProxyName',
        'message_status' => 'messageStatus',
        'organization_id' => 'organizationId',
        'private_key' => 'privateKey',
        'pub_date' => 'pubDate',
        'resource_bundle_id' => 'resourceBundleId',
        'scope' => 'scope',
        'send_result' => 'sendResult',
        'sender' => 'sender',
        'sender_name' => 'senderName',
        'sender_time_zone_id' => 'senderTimeZoneId',
        'sent' => 'sent',
        'severity' => 'severity',
        'status' => 'status',
        'title' => 'title',
        'training_mode' => 'trainingMode',
        'type' => 'type',
        'urgency' => 'urgency',
        'use_cap_rss' => 'useCapRss',
        'voice' => 'voice',
        'web' => 'web'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'account_id' => 'setAccountId',
        'affected_areas' => 'setAffectedAreas',
        'body' => 'setBody',
        'cap_file_length' => 'setCapFileLength',
        'cap_file_resource_id' => 'setCapFileResourceId',
        'cap_send_result' => 'setCapSendResult',
        'cap_sent' => 'setCapSent',
        'category' => 'setCategory',
        'certainty' => 'setCertainty',
        'code' => 'setCode',
        'created_date' => 'setCreatedDate',
        'created_id' => 'setCreatedId',
        'created_name' => 'setCreatedName',
        'created_proxy_name' => 'setCreatedProxyName',
        'event' => 'setEvent',
        'event_code' => 'setEventCode',
        'expired_hours' => 'setExpiredHours',
        'fields' => 'setFields',
        'file_attachments' => 'setFileAttachments',
        'geo_codes' => 'setGeoCodes',
        'handling' => 'setHandling',
        'id' => 'setId',
        'identifier' => 'setIdentifier',
        'instruction' => 'setInstruction',
        'ipaws_message' => 'setIpawsMessage',
        'ipaws_message_en360' => 'setIpawsMessageEn360',
        'ipaws_message_es360' => 'setIpawsMessageEs360',
        'ipaws_message_es90' => 'setIpawsMessageEs90',
        'keystore_password' => 'setKeystorePassword',
        'language' => 'setLanguage',
        'last_modified_date' => 'setLastModifiedDate',
        'last_modified_id' => 'setLastModifiedId',
        'last_modified_name' => 'setLastModifiedName',
        'last_modified_proxy_name' => 'setLastModifiedProxyName',
        'message_status' => 'setMessageStatus',
        'organization_id' => 'setOrganizationId',
        'private_key' => 'setPrivateKey',
        'pub_date' => 'setPubDate',
        'resource_bundle_id' => 'setResourceBundleId',
        'scope' => 'setScope',
        'send_result' => 'setSendResult',
        'sender' => 'setSender',
        'sender_name' => 'setSenderName',
        'sender_time_zone_id' => 'setSenderTimeZoneId',
        'sent' => 'setSent',
        'severity' => 'setSeverity',
        'status' => 'setStatus',
        'title' => 'setTitle',
        'training_mode' => 'setTrainingMode',
        'type' => 'setType',
        'urgency' => 'setUrgency',
        'use_cap_rss' => 'setUseCapRss',
        'voice' => 'setVoice',
        'web' => 'setWeb'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'account_id' => 'getAccountId',
        'affected_areas' => 'getAffectedAreas',
        'body' => 'getBody',
        'cap_file_length' => 'getCapFileLength',
        'cap_file_resource_id' => 'getCapFileResourceId',
        'cap_send_result' => 'getCapSendResult',
        'cap_sent' => 'getCapSent',
        'category' => 'getCategory',
        'certainty' => 'getCertainty',
        'code' => 'getCode',
        'created_date' => 'getCreatedDate',
        'created_id' => 'getCreatedId',
        'created_name' => 'getCreatedName',
        'created_proxy_name' => 'getCreatedProxyName',
        'event' => 'getEvent',
        'event_code' => 'getEventCode',
        'expired_hours' => 'getExpiredHours',
        'fields' => 'getFields',
        'file_attachments' => 'getFileAttachments',
        'geo_codes' => 'getGeoCodes',
        'handling' => 'getHandling',
        'id' => 'getId',
        'identifier' => 'getIdentifier',
        'instruction' => 'getInstruction',
        'ipaws_message' => 'getIpawsMessage',
        'ipaws_message_en360' => 'getIpawsMessageEn360',
        'ipaws_message_es360' => 'getIpawsMessageEs360',
        'ipaws_message_es90' => 'getIpawsMessageEs90',
        'keystore_password' => 'getKeystorePassword',
        'language' => 'getLanguage',
        'last_modified_date' => 'getLastModifiedDate',
        'last_modified_id' => 'getLastModifiedId',
        'last_modified_name' => 'getLastModifiedName',
        'last_modified_proxy_name' => 'getLastModifiedProxyName',
        'message_status' => 'getMessageStatus',
        'organization_id' => 'getOrganizationId',
        'private_key' => 'getPrivateKey',
        'pub_date' => 'getPubDate',
        'resource_bundle_id' => 'getResourceBundleId',
        'scope' => 'getScope',
        'send_result' => 'getSendResult',
        'sender' => 'getSender',
        'sender_name' => 'getSenderName',
        'sender_time_zone_id' => 'getSenderTimeZoneId',
        'sent' => 'getSent',
        'severity' => 'getSeverity',
        'status' => 'getStatus',
        'title' => 'getTitle',
        'training_mode' => 'getTrainingMode',
        'type' => 'getType',
        'urgency' => 'getUrgency',
        'use_cap_rss' => 'getUseCapRss',
        'voice' => 'getVoice',
        'web' => 'getWeb'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    const LANGUAGE_EN_US = 'en_US';
    const STATUS_A = 'A';
    const STATUS_D = 'D';
    

    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getLanguageAllowableValues()
    {
        return [
            self::LANGUAGE_EN_US,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getStatusAllowableValues()
    {
        return [
            self::STATUS_A,
            self::STATUS_D,
        ];
    }
    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['account_id'] = isset($data['account_id']) ? $data['account_id'] : null;
        $this->container['affected_areas'] = isset($data['affected_areas']) ? $data['affected_areas'] : null;
        $this->container['body'] = isset($data['body']) ? $data['body'] : null;
        $this->container['cap_file_length'] = isset($data['cap_file_length']) ? $data['cap_file_length'] : null;
        $this->container['cap_file_resource_id'] = isset($data['cap_file_resource_id']) ? $data['cap_file_resource_id'] : null;
        $this->container['cap_send_result'] = isset($data['cap_send_result']) ? $data['cap_send_result'] : null;
        $this->container['cap_sent'] = isset($data['cap_sent']) ? $data['cap_sent'] : null;
        $this->container['category'] = isset($data['category']) ? $data['category'] : null;
        $this->container['certainty'] = isset($data['certainty']) ? $data['certainty'] : null;
        $this->container['code'] = isset($data['code']) ? $data['code'] : null;
        $this->container['created_date'] = isset($data['created_date']) ? $data['created_date'] : null;
        $this->container['created_id'] = isset($data['created_id']) ? $data['created_id'] : null;
        $this->container['created_name'] = isset($data['created_name']) ? $data['created_name'] : null;
        $this->container['created_proxy_name'] = isset($data['created_proxy_name']) ? $data['created_proxy_name'] : null;
        $this->container['event'] = isset($data['event']) ? $data['event'] : null;
        $this->container['event_code'] = isset($data['event_code']) ? $data['event_code'] : null;
        $this->container['expired_hours'] = isset($data['expired_hours']) ? $data['expired_hours'] : null;
        $this->container['fields'] = isset($data['fields']) ? $data['fields'] : null;
        $this->container['file_attachments'] = isset($data['file_attachments']) ? $data['file_attachments'] : null;
        $this->container['geo_codes'] = isset($data['geo_codes']) ? $data['geo_codes'] : null;
        $this->container['handling'] = isset($data['handling']) ? $data['handling'] : null;
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['identifier'] = isset($data['identifier']) ? $data['identifier'] : null;
        $this->container['instruction'] = isset($data['instruction']) ? $data['instruction'] : null;
        $this->container['ipaws_message'] = isset($data['ipaws_message']) ? $data['ipaws_message'] : null;
        $this->container['ipaws_message_en360'] = isset($data['ipaws_message_en360']) ? $data['ipaws_message_en360'] : null;
        $this->container['ipaws_message_es360'] = isset($data['ipaws_message_es360']) ? $data['ipaws_message_es360'] : null;
        $this->container['ipaws_message_es90'] = isset($data['ipaws_message_es90']) ? $data['ipaws_message_es90'] : null;
        $this->container['keystore_password'] = isset($data['keystore_password']) ? $data['keystore_password'] : null;
        $this->container['language'] = isset($data['language']) ? $data['language'] : null;
        $this->container['last_modified_date'] = isset($data['last_modified_date']) ? $data['last_modified_date'] : null;
        $this->container['last_modified_id'] = isset($data['last_modified_id']) ? $data['last_modified_id'] : null;
        $this->container['last_modified_name'] = isset($data['last_modified_name']) ? $data['last_modified_name'] : null;
        $this->container['last_modified_proxy_name'] = isset($data['last_modified_proxy_name']) ? $data['last_modified_proxy_name'] : null;
        $this->container['message_status'] = isset($data['message_status']) ? $data['message_status'] : null;
        $this->container['organization_id'] = isset($data['organization_id']) ? $data['organization_id'] : null;
        $this->container['private_key'] = isset($data['private_key']) ? $data['private_key'] : null;
        $this->container['pub_date'] = isset($data['pub_date']) ? $data['pub_date'] : null;
        $this->container['resource_bundle_id'] = isset($data['resource_bundle_id']) ? $data['resource_bundle_id'] : null;
        $this->container['scope'] = isset($data['scope']) ? $data['scope'] : null;
        $this->container['send_result'] = isset($data['send_result']) ? $data['send_result'] : null;
        $this->container['sender'] = isset($data['sender']) ? $data['sender'] : null;
        $this->container['sender_name'] = isset($data['sender_name']) ? $data['sender_name'] : null;
        $this->container['sender_time_zone_id'] = isset($data['sender_time_zone_id']) ? $data['sender_time_zone_id'] : null;
        $this->container['sent'] = isset($data['sent']) ? $data['sent'] : null;
        $this->container['severity'] = isset($data['severity']) ? $data['severity'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['title'] = isset($data['title']) ? $data['title'] : null;
        $this->container['training_mode'] = isset($data['training_mode']) ? $data['training_mode'] : null;
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
        $this->container['urgency'] = isset($data['urgency']) ? $data['urgency'] : null;
        $this->container['use_cap_rss'] = isset($data['use_cap_rss']) ? $data['use_cap_rss'] : null;
        $this->container['voice'] = isset($data['voice']) ? $data['voice'] : null;
        $this->container['web'] = isset($data['web']) ? $data['web'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        $allowedValues = $this->getLanguageAllowableValues();
        if (!is_null($this->container['language']) && !in_array($this->container['language'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'language', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getStatusAllowableValues();
        if (!is_null($this->container['status']) && !in_array($this->container['status'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'status', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets account_id
     *
     * @return int
     */
    public function getAccountId()
    {
        return $this->container['account_id'];
    }

    /**
     * Sets account_id
     *
     * @param int $account_id account_id
     *
     * @return $this
     */
    public function setAccountId($account_id)
    {
        $this->container['account_id'] = $account_id;

        return $this;
    }

    /**
     * Gets affected_areas
     *
     * @return \Swagger\Client\Model\GeoShapeWrapper[]
     */
    public function getAffectedAreas()
    {
        return $this->container['affected_areas'];
    }

    /**
     * Sets affected_areas
     *
     * @param \Swagger\Client\Model\GeoShapeWrapper[] $affected_areas affected_areas
     *
     * @return $this
     */
    public function setAffectedAreas($affected_areas)
    {
        $this->container['affected_areas'] = $affected_areas;

        return $this;
    }

    /**
     * Gets body
     *
     * @return string
     */
    public function getBody()
    {
        return $this->container['body'];
    }

    /**
     * Sets body
     *
     * @param string $body body
     *
     * @return $this
     */
    public function setBody($body)
    {
        $this->container['body'] = $body;

        return $this;
    }

    /**
     * Gets cap_file_length
     *
     * @return int
     */
    public function getCapFileLength()
    {
        return $this->container['cap_file_length'];
    }

    /**
     * Sets cap_file_length
     *
     * @param int $cap_file_length cap_file_length
     *
     * @return $this
     */
    public function setCapFileLength($cap_file_length)
    {
        $this->container['cap_file_length'] = $cap_file_length;

        return $this;
    }

    /**
     * Gets cap_file_resource_id
     *
     * @return string
     */
    public function getCapFileResourceId()
    {
        return $this->container['cap_file_resource_id'];
    }

    /**
     * Sets cap_file_resource_id
     *
     * @param string $cap_file_resource_id cap_file_resource_id
     *
     * @return $this
     */
    public function setCapFileResourceId($cap_file_resource_id)
    {
        $this->container['cap_file_resource_id'] = $cap_file_resource_id;

        return $this;
    }

    /**
     * Gets cap_send_result
     *
     * @return string
     */
    public function getCapSendResult()
    {
        return $this->container['cap_send_result'];
    }

    /**
     * Sets cap_send_result
     *
     * @param string $cap_send_result cap_send_result
     *
     * @return $this
     */
    public function setCapSendResult($cap_send_result)
    {
        $this->container['cap_send_result'] = $cap_send_result;

        return $this;
    }

    /**
     * Gets cap_sent
     *
     * @return bool
     */
    public function getCapSent()
    {
        return $this->container['cap_sent'];
    }

    /**
     * Sets cap_sent
     *
     * @param bool $cap_sent cap_sent
     *
     * @return $this
     */
    public function setCapSent($cap_sent)
    {
        $this->container['cap_sent'] = $cap_sent;

        return $this;
    }

    /**
     * Gets category
     *
     * @return string
     */
    public function getCategory()
    {
        return $this->container['category'];
    }

    /**
     * Sets category
     *
     * @param string $category category
     *
     * @return $this
     */
    public function setCategory($category)
    {
        $this->container['category'] = $category;

        return $this;
    }

    /**
     * Gets certainty
     *
     * @return string
     */
    public function getCertainty()
    {
        return $this->container['certainty'];
    }

    /**
     * Sets certainty
     *
     * @param string $certainty certainty
     *
     * @return $this
     */
    public function setCertainty($certainty)
    {
        $this->container['certainty'] = $certainty;

        return $this;
    }

    /**
     * Gets code
     *
     * @return string
     */
    public function getCode()
    {
        return $this->container['code'];
    }

    /**
     * Sets code
     *
     * @param string $code code
     *
     * @return $this
     */
    public function setCode($code)
    {
        $this->container['code'] = $code;

        return $this;
    }

    /**
     * Gets created_date
     *
     * @return \DateTime
     */
    public function getCreatedDate()
    {
        return $this->container['created_date'];
    }

    /**
     * Sets created_date
     *
     * @param \DateTime $created_date created_date
     *
     * @return $this
     */
    public function setCreatedDate($created_date)
    {
        $this->container['created_date'] = $created_date;

        return $this;
    }

    /**
     * Gets created_id
     *
     * @return int
     */
    public function getCreatedId()
    {
        return $this->container['created_id'];
    }

    /**
     * Sets created_id
     *
     * @param int $created_id created_id
     *
     * @return $this
     */
    public function setCreatedId($created_id)
    {
        $this->container['created_id'] = $created_id;

        return $this;
    }

    /**
     * Gets created_name
     *
     * @return string
     */
    public function getCreatedName()
    {
        return $this->container['created_name'];
    }

    /**
     * Sets created_name
     *
     * @param string $created_name created_name
     *
     * @return $this
     */
    public function setCreatedName($created_name)
    {
        $this->container['created_name'] = $created_name;

        return $this;
    }

    /**
     * Gets created_proxy_name
     *
     * @return string
     */
    public function getCreatedProxyName()
    {
        return $this->container['created_proxy_name'];
    }

    /**
     * Sets created_proxy_name
     *
     * @param string $created_proxy_name created_proxy_name
     *
     * @return $this
     */
    public function setCreatedProxyName($created_proxy_name)
    {
        $this->container['created_proxy_name'] = $created_proxy_name;

        return $this;
    }

    /**
     * Gets event
     *
     * @return string
     */
    public function getEvent()
    {
        return $this->container['event'];
    }

    /**
     * Sets event
     *
     * @param string $event event
     *
     * @return $this
     */
    public function setEvent($event)
    {
        $this->container['event'] = $event;

        return $this;
    }

    /**
     * Gets event_code
     *
     * @return string
     */
    public function getEventCode()
    {
        return $this->container['event_code'];
    }

    /**
     * Sets event_code
     *
     * @param string $event_code event_code
     *
     * @return $this
     */
    public function setEventCode($event_code)
    {
        $this->container['event_code'] = $event_code;

        return $this;
    }

    /**
     * Gets expired_hours
     *
     * @return int
     */
    public function getExpiredHours()
    {
        return $this->container['expired_hours'];
    }

    /**
     * Sets expired_hours
     *
     * @param int $expired_hours expired_hours
     *
     * @return $this
     */
    public function setExpiredHours($expired_hours)
    {
        $this->container['expired_hours'] = $expired_hours;

        return $this;
    }

    /**
     * Gets fields
     *
     * @return \Swagger\Client\Model\IpawsMessageField[]
     */
    public function getFields()
    {
        return $this->container['fields'];
    }

    /**
     * Sets fields
     *
     * @param \Swagger\Client\Model\IpawsMessageField[] $fields fields
     *
     * @return $this
     */
    public function setFields($fields)
    {
        $this->container['fields'] = $fields;

        return $this;
    }

    /**
     * Gets file_attachments
     *
     * @return \Swagger\Client\Model\FileAttachmentWrapper[]
     */
    public function getFileAttachments()
    {
        return $this->container['file_attachments'];
    }

    /**
     * Sets file_attachments
     *
     * @param \Swagger\Client\Model\FileAttachmentWrapper[] $file_attachments file_attachments
     *
     * @return $this
     */
    public function setFileAttachments($file_attachments)
    {
        $this->container['file_attachments'] = $file_attachments;

        return $this;
    }

    /**
     * Gets geo_codes
     *
     * @return string[]
     */
    public function getGeoCodes()
    {
        return $this->container['geo_codes'];
    }

    /**
     * Sets geo_codes
     *
     * @param string[] $geo_codes geo_codes
     *
     * @return $this
     */
    public function setGeoCodes($geo_codes)
    {
        $this->container['geo_codes'] = $geo_codes;

        return $this;
    }

    /**
     * Gets handling
     *
     * @return string
     */
    public function getHandling()
    {
        return $this->container['handling'];
    }

    /**
     * Sets handling
     *
     * @param string $handling handling
     *
     * @return $this
     */
    public function setHandling($handling)
    {
        $this->container['handling'] = $handling;

        return $this;
    }

    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets identifier
     *
     * @return int
     */
    public function getIdentifier()
    {
        return $this->container['identifier'];
    }

    /**
     * Sets identifier
     *
     * @param int $identifier identifier
     *
     * @return $this
     */
    public function setIdentifier($identifier)
    {
        $this->container['identifier'] = $identifier;

        return $this;
    }

    /**
     * Gets instruction
     *
     * @return string
     */
    public function getInstruction()
    {
        return $this->container['instruction'];
    }

    /**
     * Sets instruction
     *
     * @param string $instruction instruction
     *
     * @return $this
     */
    public function setInstruction($instruction)
    {
        $this->container['instruction'] = $instruction;

        return $this;
    }

    /**
     * Gets ipaws_message
     *
     * @return string
     */
    public function getIpawsMessage()
    {
        return $this->container['ipaws_message'];
    }

    /**
     * Sets ipaws_message
     *
     * @param string $ipaws_message ipaws_message
     *
     * @return $this
     */
    public function setIpawsMessage($ipaws_message)
    {
        $this->container['ipaws_message'] = $ipaws_message;

        return $this;
    }

    /**
     * Gets ipaws_message_en360
     *
     * @return string
     */
    public function getIpawsMessageEn360()
    {
        return $this->container['ipaws_message_en360'];
    }

    /**
     * Sets ipaws_message_en360
     *
     * @param string $ipaws_message_en360 ipaws_message_en360
     *
     * @return $this
     */
    public function setIpawsMessageEn360($ipaws_message_en360)
    {
        $this->container['ipaws_message_en360'] = $ipaws_message_en360;

        return $this;
    }

    /**
     * Gets ipaws_message_es360
     *
     * @return string
     */
    public function getIpawsMessageEs360()
    {
        return $this->container['ipaws_message_es360'];
    }

    /**
     * Sets ipaws_message_es360
     *
     * @param string $ipaws_message_es360 ipaws_message_es360
     *
     * @return $this
     */
    public function setIpawsMessageEs360($ipaws_message_es360)
    {
        $this->container['ipaws_message_es360'] = $ipaws_message_es360;

        return $this;
    }

    /**
     * Gets ipaws_message_es90
     *
     * @return string
     */
    public function getIpawsMessageEs90()
    {
        return $this->container['ipaws_message_es90'];
    }

    /**
     * Sets ipaws_message_es90
     *
     * @param string $ipaws_message_es90 ipaws_message_es90
     *
     * @return $this
     */
    public function setIpawsMessageEs90($ipaws_message_es90)
    {
        $this->container['ipaws_message_es90'] = $ipaws_message_es90;

        return $this;
    }

    /**
     * Gets keystore_password
     *
     * @return string
     */
    public function getKeystorePassword()
    {
        return $this->container['keystore_password'];
    }

    /**
     * Sets keystore_password
     *
     * @param string $keystore_password keystore_password
     *
     * @return $this
     */
    public function setKeystorePassword($keystore_password)
    {
        $this->container['keystore_password'] = $keystore_password;

        return $this;
    }

    /**
     * Gets language
     *
     * @return string
     */
    public function getLanguage()
    {
        return $this->container['language'];
    }

    /**
     * Sets language
     *
     * @param string $language language
     *
     * @return $this
     */
    public function setLanguage($language)
    {
        $allowedValues = $this->getLanguageAllowableValues();
        if (!is_null($language) && !in_array($language, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'language', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['language'] = $language;

        return $this;
    }

    /**
     * Gets last_modified_date
     *
     * @return \DateTime
     */
    public function getLastModifiedDate()
    {
        return $this->container['last_modified_date'];
    }

    /**
     * Sets last_modified_date
     *
     * @param \DateTime $last_modified_date last_modified_date
     *
     * @return $this
     */
    public function setLastModifiedDate($last_modified_date)
    {
        $this->container['last_modified_date'] = $last_modified_date;

        return $this;
    }

    /**
     * Gets last_modified_id
     *
     * @return int
     */
    public function getLastModifiedId()
    {
        return $this->container['last_modified_id'];
    }

    /**
     * Sets last_modified_id
     *
     * @param int $last_modified_id last_modified_id
     *
     * @return $this
     */
    public function setLastModifiedId($last_modified_id)
    {
        $this->container['last_modified_id'] = $last_modified_id;

        return $this;
    }

    /**
     * Gets last_modified_name
     *
     * @return string
     */
    public function getLastModifiedName()
    {
        return $this->container['last_modified_name'];
    }

    /**
     * Sets last_modified_name
     *
     * @param string $last_modified_name last_modified_name
     *
     * @return $this
     */
    public function setLastModifiedName($last_modified_name)
    {
        $this->container['last_modified_name'] = $last_modified_name;

        return $this;
    }

    /**
     * Gets last_modified_proxy_name
     *
     * @return string
     */
    public function getLastModifiedProxyName()
    {
        return $this->container['last_modified_proxy_name'];
    }

    /**
     * Sets last_modified_proxy_name
     *
     * @param string $last_modified_proxy_name last_modified_proxy_name
     *
     * @return $this
     */
    public function setLastModifiedProxyName($last_modified_proxy_name)
    {
        $this->container['last_modified_proxy_name'] = $last_modified_proxy_name;

        return $this;
    }

    /**
     * Gets message_status
     *
     * @return string
     */
    public function getMessageStatus()
    {
        return $this->container['message_status'];
    }

    /**
     * Sets message_status
     *
     * @param string $message_status message_status
     *
     * @return $this
     */
    public function setMessageStatus($message_status)
    {
        $this->container['message_status'] = $message_status;

        return $this;
    }

    /**
     * Gets organization_id
     *
     * @return int
     */
    public function getOrganizationId()
    {
        return $this->container['organization_id'];
    }

    /**
     * Sets organization_id
     *
     * @param int $organization_id organization_id
     *
     * @return $this
     */
    public function setOrganizationId($organization_id)
    {
        $this->container['organization_id'] = $organization_id;

        return $this;
    }

    /**
     * Gets private_key
     *
     * @return string
     */
    public function getPrivateKey()
    {
        return $this->container['private_key'];
    }

    /**
     * Sets private_key
     *
     * @param string $private_key private_key
     *
     * @return $this
     */
    public function setPrivateKey($private_key)
    {
        $this->container['private_key'] = $private_key;

        return $this;
    }

    /**
     * Gets pub_date
     *
     * @return \DateTime
     */
    public function getPubDate()
    {
        return $this->container['pub_date'];
    }

    /**
     * Sets pub_date
     *
     * @param \DateTime $pub_date pub_date
     *
     * @return $this
     */
    public function setPubDate($pub_date)
    {
        $this->container['pub_date'] = $pub_date;

        return $this;
    }

    /**
     * Gets resource_bundle_id
     *
     * @return int
     */
    public function getResourceBundleId()
    {
        return $this->container['resource_bundle_id'];
    }

    /**
     * Sets resource_bundle_id
     *
     * @param int $resource_bundle_id resource_bundle_id
     *
     * @return $this
     */
    public function setResourceBundleId($resource_bundle_id)
    {
        $this->container['resource_bundle_id'] = $resource_bundle_id;

        return $this;
    }

    /**
     * Gets scope
     *
     * @return string
     */
    public function getScope()
    {
        return $this->container['scope'];
    }

    /**
     * Sets scope
     *
     * @param string $scope scope
     *
     * @return $this
     */
    public function setScope($scope)
    {
        $this->container['scope'] = $scope;

        return $this;
    }

    /**
     * Gets send_result
     *
     * @return string
     */
    public function getSendResult()
    {
        return $this->container['send_result'];
    }

    /**
     * Sets send_result
     *
     * @param string $send_result send_result
     *
     * @return $this
     */
    public function setSendResult($send_result)
    {
        $this->container['send_result'] = $send_result;

        return $this;
    }

    /**
     * Gets sender
     *
     * @return string
     */
    public function getSender()
    {
        return $this->container['sender'];
    }

    /**
     * Sets sender
     *
     * @param string $sender sender
     *
     * @return $this
     */
    public function setSender($sender)
    {
        $this->container['sender'] = $sender;

        return $this;
    }

    /**
     * Gets sender_name
     *
     * @return string
     */
    public function getSenderName()
    {
        return $this->container['sender_name'];
    }

    /**
     * Sets sender_name
     *
     * @param string $sender_name sender_name
     *
     * @return $this
     */
    public function setSenderName($sender_name)
    {
        $this->container['sender_name'] = $sender_name;

        return $this;
    }

    /**
     * Gets sender_time_zone_id
     *
     * @return string
     */
    public function getSenderTimeZoneId()
    {
        return $this->container['sender_time_zone_id'];
    }

    /**
     * Sets sender_time_zone_id
     *
     * @param string $sender_time_zone_id sender_time_zone_id
     *
     * @return $this
     */
    public function setSenderTimeZoneId($sender_time_zone_id)
    {
        $this->container['sender_time_zone_id'] = $sender_time_zone_id;

        return $this;
    }

    /**
     * Gets sent
     *
     * @return bool
     */
    public function getSent()
    {
        return $this->container['sent'];
    }

    /**
     * Sets sent
     *
     * @param bool $sent sent
     *
     * @return $this
     */
    public function setSent($sent)
    {
        $this->container['sent'] = $sent;

        return $this;
    }

    /**
     * Gets severity
     *
     * @return string
     */
    public function getSeverity()
    {
        return $this->container['severity'];
    }

    /**
     * Sets severity
     *
     * @param string $severity severity
     *
     * @return $this
     */
    public function setSeverity($severity)
    {
        $this->container['severity'] = $severity;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $allowedValues = $this->getStatusAllowableValues();
        if (!is_null($status) && !in_array($status, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'status', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets title
     *
     * @return string
     */
    public function getTitle()
    {
        return $this->container['title'];
    }

    /**
     * Sets title
     *
     * @param string $title title
     *
     * @return $this
     */
    public function setTitle($title)
    {
        $this->container['title'] = $title;

        return $this;
    }

    /**
     * Gets training_mode
     *
     * @return bool
     */
    public function getTrainingMode()
    {
        return $this->container['training_mode'];
    }

    /**
     * Sets training_mode
     *
     * @param bool $training_mode training_mode
     *
     * @return $this
     */
    public function setTrainingMode($training_mode)
    {
        $this->container['training_mode'] = $training_mode;

        return $this;
    }

    /**
     * Gets type
     *
     * @return string
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string $type type
     *
     * @return $this
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets urgency
     *
     * @return string
     */
    public function getUrgency()
    {
        return $this->container['urgency'];
    }

    /**
     * Sets urgency
     *
     * @param string $urgency urgency
     *
     * @return $this
     */
    public function setUrgency($urgency)
    {
        $this->container['urgency'] = $urgency;

        return $this;
    }

    /**
     * Gets use_cap_rss
     *
     * @return bool
     */
    public function getUseCapRss()
    {
        return $this->container['use_cap_rss'];
    }

    /**
     * Sets use_cap_rss
     *
     * @param bool $use_cap_rss use_cap_rss
     *
     * @return $this
     */
    public function setUseCapRss($use_cap_rss)
    {
        $this->container['use_cap_rss'] = $use_cap_rss;

        return $this;
    }

    /**
     * Gets voice
     *
     * @return \Swagger\Client\Model\FileAttachmentWrapper
     */
    public function getVoice()
    {
        return $this->container['voice'];
    }

    /**
     * Sets voice
     *
     * @param \Swagger\Client\Model\FileAttachmentWrapper $voice voice
     *
     * @return $this
     */
    public function setVoice($voice)
    {
        $this->container['voice'] = $voice;

        return $this;
    }

    /**
     * Gets web
     *
     * @return string
     */
    public function getWeb()
    {
        return $this->container['web'];
    }

    /**
     * Sets web
     *
     * @param string $web web
     *
     * @return $this
     */
    public function setWeb($web)
    {
        $this->container['web'] = $web;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


