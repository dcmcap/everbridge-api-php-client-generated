<?php
/**
 * TripSegment
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Rest Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.x
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.21
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * TripSegment Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class TripSegment implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'TripSegment';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'air_rail_number' => 'string',
        'from_address' => '\Swagger\Client\Model\TripAddress',
        'from_date_time' => 'string',
        'from_date_time_local' => 'string',
        'from_iata_code' => 'string',
        'from_time_zone' => 'string',
        'supplier_code' => 'string',
        'supplier_name' => 'string',
        'to_address' => '\Swagger\Client\Model\TripAddress',
        'to_date_time' => 'string',
        'to_date_time_local' => 'string',
        'to_iata_code' => 'string',
        'to_time_zone' => 'string',
        'type' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'air_rail_number' => null,
        'from_address' => null,
        'from_date_time' => null,
        'from_date_time_local' => null,
        'from_iata_code' => null,
        'from_time_zone' => null,
        'supplier_code' => null,
        'supplier_name' => null,
        'to_address' => null,
        'to_date_time' => null,
        'to_date_time_local' => null,
        'to_iata_code' => null,
        'to_time_zone' => null,
        'type' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'air_rail_number' => 'airRailNumber',
        'from_address' => 'fromAddress',
        'from_date_time' => 'fromDateTime',
        'from_date_time_local' => 'fromDateTimeLocal',
        'from_iata_code' => 'fromIataCode',
        'from_time_zone' => 'fromTimeZone',
        'supplier_code' => 'supplierCode',
        'supplier_name' => 'supplierName',
        'to_address' => 'toAddress',
        'to_date_time' => 'toDateTime',
        'to_date_time_local' => 'toDateTimeLocal',
        'to_iata_code' => 'toIataCode',
        'to_time_zone' => 'toTimeZone',
        'type' => 'type'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'air_rail_number' => 'setAirRailNumber',
        'from_address' => 'setFromAddress',
        'from_date_time' => 'setFromDateTime',
        'from_date_time_local' => 'setFromDateTimeLocal',
        'from_iata_code' => 'setFromIataCode',
        'from_time_zone' => 'setFromTimeZone',
        'supplier_code' => 'setSupplierCode',
        'supplier_name' => 'setSupplierName',
        'to_address' => 'setToAddress',
        'to_date_time' => 'setToDateTime',
        'to_date_time_local' => 'setToDateTimeLocal',
        'to_iata_code' => 'setToIataCode',
        'to_time_zone' => 'setToTimeZone',
        'type' => 'setType'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'air_rail_number' => 'getAirRailNumber',
        'from_address' => 'getFromAddress',
        'from_date_time' => 'getFromDateTime',
        'from_date_time_local' => 'getFromDateTimeLocal',
        'from_iata_code' => 'getFromIataCode',
        'from_time_zone' => 'getFromTimeZone',
        'supplier_code' => 'getSupplierCode',
        'supplier_name' => 'getSupplierName',
        'to_address' => 'getToAddress',
        'to_date_time' => 'getToDateTime',
        'to_date_time_local' => 'getToDateTimeLocal',
        'to_iata_code' => 'getToIataCode',
        'to_time_zone' => 'getToTimeZone',
        'type' => 'getType'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['air_rail_number'] = isset($data['air_rail_number']) ? $data['air_rail_number'] : null;
        $this->container['from_address'] = isset($data['from_address']) ? $data['from_address'] : null;
        $this->container['from_date_time'] = isset($data['from_date_time']) ? $data['from_date_time'] : null;
        $this->container['from_date_time_local'] = isset($data['from_date_time_local']) ? $data['from_date_time_local'] : null;
        $this->container['from_iata_code'] = isset($data['from_iata_code']) ? $data['from_iata_code'] : null;
        $this->container['from_time_zone'] = isset($data['from_time_zone']) ? $data['from_time_zone'] : null;
        $this->container['supplier_code'] = isset($data['supplier_code']) ? $data['supplier_code'] : null;
        $this->container['supplier_name'] = isset($data['supplier_name']) ? $data['supplier_name'] : null;
        $this->container['to_address'] = isset($data['to_address']) ? $data['to_address'] : null;
        $this->container['to_date_time'] = isset($data['to_date_time']) ? $data['to_date_time'] : null;
        $this->container['to_date_time_local'] = isset($data['to_date_time_local']) ? $data['to_date_time_local'] : null;
        $this->container['to_iata_code'] = isset($data['to_iata_code']) ? $data['to_iata_code'] : null;
        $this->container['to_time_zone'] = isset($data['to_time_zone']) ? $data['to_time_zone'] : null;
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets air_rail_number
     *
     * @return string
     */
    public function getAirRailNumber()
    {
        return $this->container['air_rail_number'];
    }

    /**
     * Sets air_rail_number
     *
     * @param string $air_rail_number air_rail_number
     *
     * @return $this
     */
    public function setAirRailNumber($air_rail_number)
    {
        $this->container['air_rail_number'] = $air_rail_number;

        return $this;
    }

    /**
     * Gets from_address
     *
     * @return \Swagger\Client\Model\TripAddress
     */
    public function getFromAddress()
    {
        return $this->container['from_address'];
    }

    /**
     * Sets from_address
     *
     * @param \Swagger\Client\Model\TripAddress $from_address from_address
     *
     * @return $this
     */
    public function setFromAddress($from_address)
    {
        $this->container['from_address'] = $from_address;

        return $this;
    }

    /**
     * Gets from_date_time
     *
     * @return string
     */
    public function getFromDateTime()
    {
        return $this->container['from_date_time'];
    }

    /**
     * Sets from_date_time
     *
     * @param string $from_date_time from_date_time
     *
     * @return $this
     */
    public function setFromDateTime($from_date_time)
    {
        $this->container['from_date_time'] = $from_date_time;

        return $this;
    }

    /**
     * Gets from_date_time_local
     *
     * @return string
     */
    public function getFromDateTimeLocal()
    {
        return $this->container['from_date_time_local'];
    }

    /**
     * Sets from_date_time_local
     *
     * @param string $from_date_time_local from_date_time_local
     *
     * @return $this
     */
    public function setFromDateTimeLocal($from_date_time_local)
    {
        $this->container['from_date_time_local'] = $from_date_time_local;

        return $this;
    }

    /**
     * Gets from_iata_code
     *
     * @return string
     */
    public function getFromIataCode()
    {
        return $this->container['from_iata_code'];
    }

    /**
     * Sets from_iata_code
     *
     * @param string $from_iata_code from_iata_code
     *
     * @return $this
     */
    public function setFromIataCode($from_iata_code)
    {
        $this->container['from_iata_code'] = $from_iata_code;

        return $this;
    }

    /**
     * Gets from_time_zone
     *
     * @return string
     */
    public function getFromTimeZone()
    {
        return $this->container['from_time_zone'];
    }

    /**
     * Sets from_time_zone
     *
     * @param string $from_time_zone from_time_zone
     *
     * @return $this
     */
    public function setFromTimeZone($from_time_zone)
    {
        $this->container['from_time_zone'] = $from_time_zone;

        return $this;
    }

    /**
     * Gets supplier_code
     *
     * @return string
     */
    public function getSupplierCode()
    {
        return $this->container['supplier_code'];
    }

    /**
     * Sets supplier_code
     *
     * @param string $supplier_code supplier_code
     *
     * @return $this
     */
    public function setSupplierCode($supplier_code)
    {
        $this->container['supplier_code'] = $supplier_code;

        return $this;
    }

    /**
     * Gets supplier_name
     *
     * @return string
     */
    public function getSupplierName()
    {
        return $this->container['supplier_name'];
    }

    /**
     * Sets supplier_name
     *
     * @param string $supplier_name supplier_name
     *
     * @return $this
     */
    public function setSupplierName($supplier_name)
    {
        $this->container['supplier_name'] = $supplier_name;

        return $this;
    }

    /**
     * Gets to_address
     *
     * @return \Swagger\Client\Model\TripAddress
     */
    public function getToAddress()
    {
        return $this->container['to_address'];
    }

    /**
     * Sets to_address
     *
     * @param \Swagger\Client\Model\TripAddress $to_address to_address
     *
     * @return $this
     */
    public function setToAddress($to_address)
    {
        $this->container['to_address'] = $to_address;

        return $this;
    }

    /**
     * Gets to_date_time
     *
     * @return string
     */
    public function getToDateTime()
    {
        return $this->container['to_date_time'];
    }

    /**
     * Sets to_date_time
     *
     * @param string $to_date_time to_date_time
     *
     * @return $this
     */
    public function setToDateTime($to_date_time)
    {
        $this->container['to_date_time'] = $to_date_time;

        return $this;
    }

    /**
     * Gets to_date_time_local
     *
     * @return string
     */
    public function getToDateTimeLocal()
    {
        return $this->container['to_date_time_local'];
    }

    /**
     * Sets to_date_time_local
     *
     * @param string $to_date_time_local to_date_time_local
     *
     * @return $this
     */
    public function setToDateTimeLocal($to_date_time_local)
    {
        $this->container['to_date_time_local'] = $to_date_time_local;

        return $this;
    }

    /**
     * Gets to_iata_code
     *
     * @return string
     */
    public function getToIataCode()
    {
        return $this->container['to_iata_code'];
    }

    /**
     * Sets to_iata_code
     *
     * @param string $to_iata_code to_iata_code
     *
     * @return $this
     */
    public function setToIataCode($to_iata_code)
    {
        $this->container['to_iata_code'] = $to_iata_code;

        return $this;
    }

    /**
     * Gets to_time_zone
     *
     * @return string
     */
    public function getToTimeZone()
    {
        return $this->container['to_time_zone'];
    }

    /**
     * Sets to_time_zone
     *
     * @param string $to_time_zone to_time_zone
     *
     * @return $this
     */
    public function setToTimeZone($to_time_zone)
    {
        $this->container['to_time_zone'] = $to_time_zone;

        return $this;
    }

    /**
     * Gets type
     *
     * @return string
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string $type type
     *
     * @return $this
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


